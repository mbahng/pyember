name: Publish to PyPI
on: 
  workflow_run: 
    workflows: ["build-wheels"]
    types: 
      - completed
    branches: [main]

jobs:
  publish-to-pypi:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyember
    permissions:
      id-token: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
          path: dist
          merge-multiple: true
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.whl 

      - name: Organize wheels
        run: |
          # Show initial structure
          echo "Initial directory structure:"
          find dist -type f
          
          # Move all wheels to dist directory
          find dist -type f -name "*.whl" -exec mv {} dist/ \;
          
          # Clean up empty directories
          find dist -type d -empty -delete
          
          # Show final structure
          echo "Final directory structure:"
          find dist -type f
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.14
        with:
          verbose: true
          packages-dir: dist/
          print-hash: true

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          "$GITHUB_REF_NAME" dist/**
          --repo "$GITHUB_REPOSITORY"
