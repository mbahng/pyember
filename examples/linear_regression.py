import ember 

ds = ember.datasets.LinearDataset(N=20, D=4)
dl = ember.datasets.Dataloader(ds, batch_size=2)
model = ember.models.LinearRegression(5) 
mse = ember.objectives.MSELoss()
a = 1e-4

for epoch in range(1000):
  loss = ember.ScalarTensor(0) 
  for x, y in dl: 
    y_ = model.forward(x) 
    loss = mse(y, y_)
    loss.backprop(True) 
    print("========Loss Grad")
    print(mse.loss.grad.shape)
    print(mse.loss.grad.bidx)
    print(mse.loss.grad.pidx)
    print("========Sum Sq Diff Grad")
    print(mse.sum_sq_diff.grad.shape)
    print(mse.sum_sq_diff.grad.bidx)
    print(mse.sum_sq_diff.grad.pidx)
    print("========Sq Diff Grad")
    print(mse.sq_diff.grad.shape) 
    print(mse.sq_diff.grad.bidx) 
    print(mse.sq_diff.grad.pidx) 
    print("========Diff Grad")
    print(mse.diff.shape, mse.diff.bidx)
    print(mse.diff.grad.shape, mse.diff.grad.bidx, mse.diff.grad.pidx) 
    print("========Y Pred Grad")
    print(y.shape, y.bidx)
    print(y_.grad.shape, y_.grad.bidx, y_.grad.pidx) 
    # print("========b Grad")
    # print(model.b.grad.shape)
    # print(model.b.grad.bidx)
    # print(model.b.grad.pidx) 
    # print("========z1 Grad")
    # print(model.z1.grad.shape)
    # print(model.z1.grad.bidx)
    # print(model.z1.grad.pidx)
    # print("========W Grad")
    # print(model.W.grad.shape)
    # print(model.W.grad.bidx)
    # print(model.W.grad.pidx)
    exit()
    model.W = model.W - a * model.W.grad.reshape(model.W.shape, inplace=False)
    model.b = model.b - a * model.b.grad.reshape(model.b.shape, inplace=False)

  if epoch % 25 == 0: 
    print(f"LOSS = {loss[0].item()}")

